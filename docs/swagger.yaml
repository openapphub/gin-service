basePath: /api/v1
definitions:
  api.InvalidateCacheInput:
    properties:
      body:
        type: string
      method:
        enum:
        - GET
        - POST
        type: string
      path:
        type: string
    required:
    - method
    - path
    type: object
  api.RefreshCacheInput:
    properties:
      body:
        type: string
      duration:
        minimum: 1
        type: integer
      method:
        enum:
        - GET
        - POST
        type: string
      path:
        type: string
    required:
    - duration
    - method
    - path
    type: object
  serializer.Response:
    properties:
      code:
        type: integer
      data: {}
      error:
        type: string
      msg:
        type: string
      token: {}
    type: object
  service.UserLoginService:
    properties:
      device_info:
        type: string
      password:
        maxLength: 40
        minLength: 8
        type: string
      user_name:
        maxLength: 30
        minLength: 5
        type: string
    required:
    - password
    - user_name
    type: object
  service.UserRegisterService:
    properties:
      nickname:
        maxLength: 30
        minLength: 2
        type: string
      password:
        maxLength: 40
        minLength: 8
        type: string
      password_confirm:
        maxLength: 40
        minLength: 8
        type: string
      user_name:
        maxLength: 30
        minLength: 5
        type: string
    required:
    - nickname
    - password
    - password_confirm
    - user_name
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample server for openapphub.
  title: openapphub API
  version: "1.0"
paths:
  /cache/clear:
    post:
      consumes:
      - application/json
      description: Clear all cached items with a specific prefix
      parameters:
      - description: Cache key prefix
        in: body
        name: prefix
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Cache cleared successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: Clear cache by prefix
      tags:
      - cache
  /cache/invalidate:
    post:
      consumes:
      - application/json
      description: Remove a specific key from the cache
      parameters:
      - description: Invalidate Cache Info
        in: body
        name: invalidate_info
        required: true
        schema:
          $ref: '#/definitions/api.InvalidateCacheInput'
      produces:
      - application/json
      responses:
        "200":
          description: Cache invalidated successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: Invalidate cache for a specific key
      tags:
      - cache
  /cache/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the cache for a specific key with a new duration
      parameters:
      - description: Refresh Cache Info
        in: body
        name: refresh_info
        required: true
        schema:
          $ref: '#/definitions/api.RefreshCacheInput'
      produces:
      - application/json
      responses:
        "200":
          description: Cache refreshed successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/serializer.Response'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: Refresh cache for a specific key
      tags:
      - cache
  /ping:
    post:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: pong
          schema:
            type: string
      summary: Ping test
      tags:
      - ping
  /user/login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a token
      parameters:
      - description: User Login Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.UserLoginService'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/serializer.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: Log in a user
      tags:
      - user
  /user/logout:
    delete:
      consumes:
      - application/json
      description: Log out the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User logged out successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - ApiKeyAuth: []
      summary: Log out a user
      tags:
      - user
  /user/me:
    get:
      consumes:
      - application/json
      description: Get information about the currently logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/serializer.Response'
      security:
      - ApiKeyAuth: []
      summary: Get current user information
      tags:
      - user
  /user/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the JWT access token using a refresh token
      parameters:
      - description: Refresh Token
        in: body
        name: refresh_token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: New access token
          schema:
            $ref: '#/definitions/serializer.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/serializer.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: Refresh JWT token
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: User Registration Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/service.UserRegisterService'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/serializer.Response'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/serializer.Response'
      summary: Register a new user
      tags:
      - user
swagger: "2.0"
